#触手袭击事件
namespace = tentacleswarm_slave
#0001经典水井杀
#0011成年礼物
#0021天生奴隶
#0031主动要求赐福
#0041被监禁者腐化
#1001奴隶健康崩溃事件

#水井杀，样板戏
#一个触手样板戏应该包括起承转合四部分
#起：故事的起因，主人公是在什么背景下受到触手的袭击的。此处不应该出现触手侵害过程的描述。可以用来处理一些条件判断
#承：故事的发展，主人公是如何被触手抓获的，以及侵害进行的过程。这里应该针对主人公的现状（是否是奴隶，是否怀孕，是否有意被腐化）进行分类描述。
#转：故事的高潮，主人公是如何恶堕的。这一部分事件通过perk_event来实现，即便故事背景不同，也有统一的描述。
#合：故事的收尾，主人公是如何恢复神智的。
#水井杀起
tentacleswarm_slave.0001 = {
	type = character_event
	title = tentacleswarm_slave.0001.t
	desc = tentacleswarm_slave.0001.desc #故事背景的介绍
	
	theme = seduction
	left_portrait = this
	
	trigger = { #处理条件判断
		is_tentaclable_female = yes
		#is_baby_corrupted_tentacle_slave = no #怀孕且已经赐福的奴隶，不会被这个事件打扰
	}
	option = { #主人公在这个故事背景里面的反应
		name = tentacleswarm_slave.0001.a
		trigger_event= {
			id = tentacleswarm_slave.0002
		}
	}
}
#水井杀承
tentacleswarm_slave.0002 = {
	type = character_event
	title = tentacleswarm_slave.t	
	desc = {
		#如何被抓获的
		desc = tentacleswarm_slave.0002.desc
		#根据是否是奴隶，是否怀孕，选择被侵害时的文本
		first_valid = {
			triggered_desc = {
				trigger = {
					is_tentacle_slave = yes
					NOT = { has_trait = pregnant }
				}
				desc = tentacleswarm_slave.slave_not_pregnant
			}
			triggered_desc = {
				trigger = {
					is_tentacle_slave = yes
					has_trait = pregnant
				}
				desc = tentacleswarm_slave.slave_pregnant
			}
			triggered_desc = {
				trigger = {
					is_tentacle_slave = no
					NOT = { has_trait = pregnant }
				}
				desc = tentacleswarm_slave.not_slave_not_pregnant
			}
			triggered_desc = {
				trigger = {
					is_tentacle_slave = no
					has_trait = pregnant
				}
				desc = tentacleswarm_slave.not_slave_pregnant
			}
		} 
	}
	theme = seduction
	left_portrait = {
		character = this
		animation = shock
	}
	#已经发生的事件，被触手主人侵袭了
	immediate = {
		tentacle_corrupt_effect = yes
	}
	#下面的选项决定主人公是否屈服于主人，不抵抗腐化
	#接受tentacle_corrupt_accept_effect将导致【转】部分的恶堕事件
	#拒绝tentacle_corrupt_reject_effect计算是否成功抵抗
	#如果抵抗失败了依然导致恶堕事件，否则只有提示横幅，然后跳过【转】部分。
	
	#接受选项
	option = {
		name = tentacleswarm_slave.accept_slave #奴隶接受文本
		trigger = {
			is_tentacle_slave = yes
		}
		tentacle_corrupt_accept_effect = yes
		ai_chance = {
			base = 100
			ai_accept_corrupt_modifier = yes
		}
	}
	option = {
		name = tentacleswarm_slave.accept #非奴隶接受文本
		trigger = {
			is_tentacle_slave = no
		}
		tentacle_corrupt_accept_effect = yes
		ai_chance = {
			base = 100
			ai_accept_corrupt_modifier = yes
		}
	}
	#拒绝选项
	option = {
		trigger = {  
			NOT = { has_perk = tentacle_corruption_22_perk } #如果瘴气成瘾了，这个选项不能选
		}
		show_as_unavailable = {
			is_tentacle_slave = no
			has_perk = tentacle_corruption_22_perk #如果是触手奴隶了，这个选项看不到
		}
		name = tentacleswarm_slave.reject
		tentacle_corrupt_reject_effect = yes
		ai_chance = {
			base = 100
			ai_reject_corrupt_modifier = yes
		}
	}
	#一天之后，结算【合】部分
	after = {
		trigger_event= {
			id = tentacleswarm_slave.0003
			days = 1
		}
	}
}
#水井杀合
tentacleswarm_slave.0003 = {
	type = character_event
	title = tentacleswarm_slave.0003.t
	desc = { #尾声
		#根据是否是奴隶，选择尾声时的文本
		first_valid = {
			triggered_desc = {
				trigger = {
					OR = {
						is_tentacle_slave = yes
						has_character_flag = willing_to_be_corrupted
					}
				}
				desc = tentacleswarm_slave.0003.desc1
			}
			triggered_desc = {
				trigger = {
					always = yes
				}
				desc = tentacleswarm_slave.0003.desc2
			}
		} 
	}
	
	theme = seduction
	left_portrait = {
		character = this
		animation = personality_coward #乖巧
	}
	option = {
		name = tentacleswarm_slave.0003.a #开心
		trigger = {  
			OR = {
				is_tentacle_slave = yes
				has_character_flag = willing_to_be_corrupted
			}
		}
	}
	option = {
		name = tentacleswarm_slave.0003.b #厌恶
		trigger = {  
			NOR = {
				is_tentacle_slave = yes
				has_character_flag = willing_to_be_corrupted
			}
		}
	}
	after = {
		#在这里可以清理一下各种flag什么的
	}
}

#来自监护人的特别的成年礼物
tentacleswarm_slave.0011 = {
	type = character_event
	title = tentacleswarm_slave.0011.t
	desc = tentacleswarm_slave.0011.desc
	theme = seduction
	left_portrait = this
	right_portrait = scope:guardian
	 
	trigger = {
		is_female = yes
		fertility >= 0.1
	}
	option = {
		name = tentacleswarm_slave.0011.a
		trigger_event= {
			id = tentacleswarm_slave.0012
		}
	}
}
tentacleswarm_slave.0012 = {
	type = character_event
	title = tentacleswarm_slave.0012.t
	desc = tentacleswarm_slave.0012.desc
	theme = seduction
	left_portrait = {
		character = this
		animation = personality_zealous
	}
	
	right_portrait = scope:guardian
	
	immediate = {
		tentacle_corrupt_effect = yes
	}
	option = {
		name = tentacleswarm_slave.0012.a
		tentacle_corrupt_accept_effect = yes
		#知晓了监护人的秘密
		scope:guardian = {
			if = {
				limit = { is_hidden_tentacle_slave = yes }
				random_secret = {
					limit = { secret_type = secret_tentacle_slave }
					reveal_to = root
				}
			}
		}
		
		ai_chance = {
			base = 100
			ai_accept_corrupt_modifier = yes
		}
	}
	option = {
		trigger = {  
			NOT = { has_perk = tentacle_corruption_22_perk }
		}
		show_as_unavailable = {
			NOT = { has_perk = tentacle_corruption_31_perk }
			has_perk = tentacle_corruption_22_perk
		}
		name = tentacleswarm_slave.refuse
		tentacle_corrupt_reject_effect = yes
		#知晓了监护人的秘密
		scope:guardian = {
			if = {
				limit = { is_hidden_tentacle_slave = yes }
				random_secret = {
					limit = { secret_type = secret_tentacle_slave }
					reveal_to = root
				}
			}
		}
		
		ai_chance = {
			base = 100
			ai_reject_corrupt_modifier = yes
		}
	}
}
#天生奴隶成为真正的奴隶
tentacleswarm_slave.0021 = {
	type = character_event
	title = tentacleswarm_slave.0021.t
	desc = tentacleswarm_slave.0021.desc
	
	theme = seduction
	left_portrait = this
	 
	trigger = {
		is_tentaclable_female = yes
		is_tentacle_slave = no
	}
	option = {
		name = tentacleswarm_slave.0001.a
		tentacle_corrupt_accept_effect = yes
		
		ai_chance = {
			base = 100
			ai_accept_corrupt_modifier = yes
		}
	}
	option = {
		trigger = {
			is_tentacle_slave = no
		}
		show_as_unavailable = { 
			is_tentacle_slave = no
		}
		name = tentacleswarm_slave.refuse
		tentacle_corrupt_reject_effect = yes
		
		ai_chance = {
			base = 100
			ai_reject_corrupt_modifier = yes
		}
	}
}
#要求赐福
tentacleswarm_slave.0031 = {
	type = character_event
	title = tentacleswarm_slave.0031.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					#初次奉献
					is_tentacle_slave = no 
					has_religion = religion:tentacleswarm_religion 
				}
				desc = tentacleswarm_slave.0031.desc
			}
			triggered_desc = {
				trigger = {
					always = yes
				}
				desc = tentacleswarm_slave.0031.desc1
			}
		}
	}
	theme = faith
	left_portrait = {
		character = this
		animation = personality_zealous
	}
	
	 
	trigger = {
		is_tentaclable_female = yes
	}
	option = {
		name = tentacleswarm_slave.0031.a
		add_character_flag = willing_to_be_corrupted #主动接受赐福，说明你是想被腐化的 
		trigger_event = {
			id = tentacleswarm_slave.0032
		}
	}
}
tentacleswarm_slave.0032 = {
	type = character_event
	title = tentacleswarm_slave.0032.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					is_tentacle_slave = yes
					is_pregnant_nature_or_tentacle = no
				}
				desc = tentacleswarm_slave.0032.desc1
			}
			triggered_desc = {
				trigger = {
					is_tentacle_slave = yes
					is_pregnant_nature_or_tentacle = yes
				}
				desc = tentacleswarm_slave.0032.desc2
			}
			triggered_desc = {
				trigger = {
					is_tentacle_slave = no
					is_pregnant_nature_or_tentacle = no
				}
				desc = tentacleswarm_slave.0032.desc3
			}
			triggered_desc = {
				trigger = {
					always = yes
				}
				desc = tentacleswarm_slave.0032.desc4
			}
		}
	}
	theme = faith
	left_portrait = {
		character = root
		animation = happiness
	}
	 
	immediate = {
		tentacle_corrupt_effect = yes
	}
	option = {
		name = tentacleswarm_slave.0032.a
		tentacle_corrupt_accept_effect = yes
		
		ai_chance = {
			base = 1000 #被赐福的情况下，更有可能接受
			ai_accept_corrupt_modifier = yes
		}
	}
	option = {
		trigger = {  
			NOT = { has_perk = tentacle_corruption_22_perk }
		}
		show_as_unavailable = {
			NOT = { has_perk = tentacle_corruption_31_perk }
			has_perk = tentacle_corruption_22_perk
		}
		name = tentacleswarm_slave.refuse
		tentacle_corrupt_reject_effect = yes
		
		ai_chance = {
			base = 100
			ai_reject_corrupt_modifier = yes
		}
	}
}

#被囚禁者腐化
tentacleswarm_slave.0041 = {
	type = character_event
	title = tentacleswarm_slave.0041.t
	desc = tentacleswarm_slave.0041.desc
	theme = dungeon
	left_portrait = this
	right_portrait = scope:imprisoner
	 
	trigger = {
		is_tentaclable_female = yes
	}  
	option = {
		name = tentacleswarm_slave.0041.a
		trigger_event = {
			id = tentacleswarm_slave.0042
		}
	}
}
tentacleswarm_slave.0042 = {
	type = character_event
	title = tentacleswarm_slave.0042.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					is_tentacle_slave = yes
					is_pregnant_nature_or_tentacle = no
				}
				desc = tentacleswarm_slave.0042.desc1
			}
			triggered_desc = {
				trigger = {
					is_tentacle_slave = yes
					is_pregnant_nature_or_tentacle = yes
				}
				desc = tentacleswarm_slave.0042.desc2
			}
			triggered_desc = {
				trigger = {
					is_tentacle_slave = no
					is_pregnant_nature_or_tentacle = no
				}
				desc = tentacleswarm_slave.0042.desc3
			}
			triggered_desc = {
				trigger = {
					always = yes
				}
				desc = tentacleswarm_slave.0042.desc4
			}
		}
	}
	theme = dungeon
	left_portrait = {
		character = this
		animation = personality_zealous
	}
	
	right_portrait = scope:imprisoner
	 
	immediate = {
		tentacle_corrupt_effect = yes
	}
	option = {
		name = tentacleswarm_slave.0042.a
		tentacle_corrupt_accept_effect = yes
		
		ai_chance = {
			base = 100
			ai_accept_corrupt_modifier = yes
		}
	}
	option = {
		trigger = {  
			NOT = { has_perk = tentacle_corruption_22_perk }
		}
		show_as_unavailable = {
			NOT = { has_perk = tentacle_corruption_31_perk }
			has_perk = tentacle_corruption_22_perk
		}
		name = tentacleswarm_slave.refuse
		tentacle_corrupt_reject_effect = yes
		
		ai_chance = {
			base = 100
			ai_reject_corrupt_modifier = yes
		}
	}
}
tentacleswarm_slave.1001 = {
	type = character_event
	title = tentacleswarm_slave.1001.t

	desc = tentacleswarm_slave.1001.desc

	left_portrait = {
		character = root
		animation = sick
	}
	theme = physical_health

	option = {
		name = {
			trigger = { has_trait = lazy }
			text = tentacleswarm_slave.1001.a.lazy
		}
		name = {
			trigger = { has_trait = lustful }
			text = tentacleswarm_slave.1001.a.lust
		}
		name = {
			text = tentacleswarm_slave.1001.a
		}

		if = {
			limit = { has_character_flag = immune_to_disease }
			remove_character_flag = immune_to_disease
		}
		
		add_trait = infirm

		stress_impact = {
			lazy = minor_stress_loss
			diligent = medium_stress_gain
			lustful = medium_stress_gain
		}
	}
}