#腐化阴谋事件
namespace = tentacle_corrupt_scheme
#0001预处理
#1001样板水井杀

#阴谋就位
tentacle_corrupt_scheme.0001 = {
	hidden = yes

	immediate = {
		add_character_flag = { #Only resolve one abduction in the same day
			flag = is_in_event_tentacle_corrupt_outcome_0001
			days = 1
		}
		trigger_event = {
			on_action = tentacle_corrupt_setup #挑选方法
		}
	}
}
#水井投放
tentacle_corrupt_scheme.1001 = {
	type = character_event
	title = tentacle_corrupt_scheme.1001.t
	desc = tentacle_corrupt_scheme.1001.desc
	
	theme = intrigue
	left_portrait = {
		character = scope:target
		animation = personality_coward
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}
	
	immediate = {
		#计算被发现概率
		save_scope_value_as = {
			name = discovery_chance
			value = {
				value = 100
				subtract = scope:scheme.scheme_secrecy
			}
		}
	}
	
	#搞起
	option = {
		name = tentacle_corrupt_scheme.1001.a
		#判断是否被发现
		random = {
			chance = scope:discovery_chance
			custom_tooltip = tentacle_corrupt_scheme_become_discovered_roll_tt
			save_scope_value_as = {
				name = scheme_discovered
				value = yes
			}
		}
		#判断是否成功
		random = {
			chance = scope:scheme.scheme_success_chance
			custom_tooltip = tentacle_corrupt_scheme_successful_roll_tt
			save_scope_value_as = {
				name = scheme_successful
				value = yes
			}
		}
		#执行计划
		trigger_event = tentacle_corrupt_scheme.1002
		ai_chance = {
			base = 100
		}
	}
	#等等
	option = {
		name = tentacle_corrupt_scheme.1001.b
		custom_tooltip = do_not_execute_tentacle_corrupt_tooltip

		scope:scheme = {
			add_scheme_progress = -5 # Reset scheme progress
		}

		ai_chance = {
			base = 0
		}
		stress_impact = {
			impatient = medium_stress_impact_gain
			stubborn = medium_stress_impact_gain
		}
	}
}
#判断是否成功
tentacle_corrupt_scheme.1002 = {
	hidden = yes
	immediate = {
		#成功了
		if = {
			limit = {
				exists = scope:scheme_successful
			}
			trigger_event = tentacle_corrupt_scheme.1003
		}
		#失败了
		else = {
			trigger_event = tentacle_corrupt_scheme.1004
		}
	}
}
#成功了
tentacle_corrupt_scheme.1003 = {
	type = character_event
	title = tentacle_corrupt_scheme.1003.t
	desc = tentacle_corrupt_scheme.1003.desc
	
	theme = intrigue
	left_portrait = {
		character = scope:target
		animation = rage
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}
	immediate = {
		custom_tooltip = tentacle_corrupt_scheme_successful_roll_tt
		scope:target = {
			trigger_event = tentacleswarm_scene.0010 #目标被腐化
		}
		#被发现了
		if = {
			limit = {
				exists = scope:scheme_discovered
			}
			scope:owner = {
				random_secret = {
					limit = { 
						secret_type = secret_tentacle_slave 
						NOT = { is_known_by = scope:target }
					}
					reveal_to = scope:target
				}
			}
		}
	}
	option = { #恶堕完成了
		name = tentacle_corrupt_scheme.1003.a
		trigger = {
			scope:target = { is_tentacle_slave = yes }
		}
		scope:target = {
			random_secret = {
				limit = { 
					secret_type = secret_tentacle_slave 
					NOT = { is_known_by = scope:owner }
				}
				reveal_to = scope:owner
			}
		}
		ai_chance = {
			base = 100
		}
	}
	option = { #恶堕加深了
		name = tentacle_corrupt_scheme.1003.b
		trigger = {
			scope:target = { 
				is_tentacle_slave = no 
				NOT = { has_character_flag = tentacle_corrupt_reject_success }
			}
		}
		scope:target = {
			#custom_tooltip = tentacle_corruption_perk_add.tt
		}
		scope:scheme = {
			add_scheme_progress = -3
		}
		ai_chance = {
			base = 100
		}
	}
	option = { #目标抵制了恶堕
		name = tentacle_corrupt_scheme.1003.c
		trigger = {
			scope:target = { 
				is_tentacle_slave = no 
				has_character_flag = tentacle_corrupt_reject_success
			}
		}
		scope:target = {
			#custom_tooltip = tentacle_corrupt_reject_success.tt
		}
		scope:scheme = {
			add_scheme_progress = -3
		}
		ai_chance = {
			base = 100
		}
	}
}
#失败了
tentacle_corrupt_scheme.1004 = {
	type = character_event
	title = tentacle_corrupt_scheme.1004.t
	desc = tentacle_corrupt_scheme.1004.desc
	
	theme = intrigue
	left_portrait = {
		character = scope:target
		animation = rage
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}
	immediate = {
		#被发现了
		if = {
			limit = {
				exists = scope:scheme_discovered
			}
			scope:owner = {
				random_secret = {
					limit = { 
						secret_type = secret_tentacle_slave 
						NOT = { is_known_by = scope:target }
					}
					reveal_to = scope:target
				}
			}
		}
	}
	option = { #下回继续
		name = tentacle_corrupt_scheme.1004.a
		scope:scheme = {
			add_scheme_progress = -3
		}
		ai_chance = {
			base = 100
		}
	}
}