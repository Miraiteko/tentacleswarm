#恶堕阴谋事件
namespace = tentacle_degenerate_scheme
#0001预处理
#1001样板水井杀

#9997被某人发现
#9998知道对方是奴隶了
#9999让非领主的ai能够发起腐化阴谋

#阴谋就位
tentacle_degenerate_scheme.0001 = {
	hidden = yes

	immediate = {
		add_character_flag = { #Only resolve one abduction in the same day
			flag = is_in_event_tentacle_degenerate_outcome_0001
			days = 1
		}
		trigger_event = {
			on_action = tentacle_degenerate_setup #挑选方法
		}
	}
}
#水井投放
tentacle_degenerate_scheme.1001 = {
	type = character_event
	title = tentacle_degenerate_scheme.1001.t
	desc = tentacle_degenerate_scheme.1001.desc
	
	theme = intrigue
	left_portrait = {
		character = scope:target
		animation = personality_coward
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}
	
	immediate = {
		#计算被发现概率
		save_scope_value_as = {
			name = discovery_chance
			value = {
				value = 100
				subtract = scope:scheme.scheme_secrecy
			}
		}
	}
	
	#搞起
	option = {
		name = tentacle_degenerate_scheme.1001.a
		#判断是否被发现
		random = {
			chance = scope:discovery_chance
			custom_tooltip = tentacle_degenerate_scheme_become_discovered_roll_tt
			save_scope_value_as = {
				name = scheme_discovered
				value = yes
			}
		}
		#判断是否成功
		random = {
			chance = scope:scheme.scheme_success_chance
			custom_tooltip = tentacle_degenerate_scheme_successful_roll_tt
			save_scope_value_as = {
				name = scheme_successful
				value = yes
			}
		}
		#执行计划
		trigger_event = tentacle_degenerate_scheme.1002
		ai_chance = {
			base = 100
		}
	}
	#等等
	option = {
		name = tentacle_degenerate_scheme.1001.b
		custom_tooltip = do_not_execute_tentacle_degenerate_tooltip

		scope:scheme = {
			add_scheme_progress = -5 # Reset scheme progress
		}

		ai_chance = {
			base = 0
		}
		stress_impact = {
			impatient = medium_stress_impact_gain
			stubborn = medium_stress_impact_gain
		}
	}
}
#判断是否成功
tentacle_degenerate_scheme.1002 = {
	hidden = yes
	immediate = {
		#成功了
		if = {
			limit = {
				exists = scope:scheme_successful
			}
			trigger_event = tentacle_degenerate_scheme.1003
		}
		#失败了
		else = {
			trigger_event = tentacle_degenerate_scheme.1004
		}
	}
}
#成功了
tentacle_degenerate_scheme.1003 = {
	type = character_event
	title = tentacle_degenerate_scheme.1003.t
	desc = tentacle_degenerate_scheme.1003.desc
	
	theme = intrigue
	left_portrait = {
		character = scope:target
		animation = rage
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}
	immediate = {
		custom_tooltip = tentacle_degenerate_scheme_successful_roll_tt
		scope:target = {
			trigger_event = tentacleswarm_scene.0010 #目标触发水井杀
		}
		#被发现了
		if = {
			limit = {
				exists = scope:scheme_discovered
			}
			scope:owner = { #对方的一位廷臣知晓了秘密
				save_scope_as = slave
				scope:target = {
					if = {
						limit = { is_ruler = yes }
						random_courtier_or_guest = {
							limit = { is_imprisoned = no }
							save_scope_as = knower
						}
					}
					else_if = {
						limit = { exists = liege_or_court_owner }
						liege_or_court_owner = {
							random_courtier_or_guest = {
								limit = { is_imprisoned = no }
								save_scope_as = knower
							}
						}
					}
					if = {
						limit = { NOT = { exists = scope:knower } }
						save_scope_as = knower
					}
				}
				scope:knower = {
					trigger_event = {
						on_action = tentacle_slave_discover_random_pulse
						days = 5
					}
				}
			}
		}
	}
	option = { #恶堕完成了
		name = tentacle_degenerate_scheme.1003.a
		trigger = {
			scope:target = { is_tentacle_slave = yes }
		}
		scope:target = {
			random_secret = {
				limit = { 
					secret_type = secret_tentacle_slave 
					NOT = { is_known_by = scope:owner }
				}
				reveal_to = scope:owner
			}
		}
		ai_chance = {
			base = 100
		}
	}
	option = { #恶堕加深了
		name = tentacle_degenerate_scheme.1003.b
		trigger = {
			scope:target = { 
				is_tentacle_slave = no 
				NOT = { has_character_flag = tentacle_degenerate_reject_success }
			}
		}
		scope:target = {
			#custom_tooltip = tentacle_corruption_perk_add.tt
		}
		scope:scheme = {
			add_scheme_progress = -3
		}
		ai_chance = {
			base = 100
		}
	}
	option = { #目标抵制了恶堕
		name = tentacle_degenerate_scheme.1003.c
		trigger = {
			scope:target = { 
				is_tentacle_slave = no 
				has_character_flag = tentacle_degenerate_reject_success
			}
		}
		scope:target = {
			#custom_tooltip = tentacle_degenerate_reject_success.tt
		}
		scope:scheme = {
			add_scheme_progress = -3
		}
		ai_chance = {
			base = 100
		}
	}
}
#失败了
tentacle_degenerate_scheme.1004 = {
	type = character_event
	title = tentacle_degenerate_scheme.1004.t
	desc = tentacle_degenerate_scheme.1004.desc
	
	theme = intrigue
	left_portrait = {
		character = scope:target
		animation = rage
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}
	immediate = {
		#被发现了
		if = {
			limit = {
				exists = scope:scheme_discovered
			}
			scope:owner = { #对方的一位廷臣知晓了秘密
				save_scope_as = slave
				scope:target = {
					if = {
						limit = { is_ruler = yes }
						random_courtier_or_guest = {
							limit = { is_imprisoned = no }
							save_scope_as = knower
						}
					}
					else_if = {
						limit = { exists = liege_or_court_owner }
						liege_or_court_owner = {
							random_courtier_or_guest = {
								limit = { is_imprisoned = no }
								save_scope_as = knower
							}
						}
					}
					if = {
						limit = { NOT = { exists = scope:knower } }
						save_scope_as = knower
					}
				}
				scope:knower = {
					trigger_event = {
						on_action = tentacle_slave_discover_random_pulse
						days = 5
					}
				}
			}
		}
	}
	option = { #下回继续
		name = tentacle_degenerate_scheme.1004.a
		scope:scheme = {
			add_scheme_progress = -3
		}
		ai_chance = {
			base = 100
		}
	}
}
#被某人发现
tentacle_degenerate_scheme.9997 = {
	type = character_event
	title = tentacle_degenerate_scheme.9997.t
	desc = tentacle_degenerate_scheme.9997.desc
	
	theme = intrigue
	left_portrait = {
		character = scope:slave
		animation = rage
	}
	trigger = {
		scope:slave = {
			is_hidden_tentacle_slave = yes
			any_secret = {
				secret_type = secret_tentacle_slave 
				NOT = { is_known_by = ROOT }
			}
		}
	}
	option = {
		name = {
			trigger = {
				OR = {
					is_tentacle_slave = yes
					has_character_flag = willing_to_be_corrupted
				}
			}
			text = tentacle_degenerate_scheme.9997.a
		}
		name = {
			trigger = {
				NOR = {
					is_tentacle_slave = yes
					has_character_flag = willing_to_be_corrupted
				}
			}
			text = tentacle_degenerate_scheme.9997.b
		}
		scope:owner = {
			random_secret = {
				limit = { 
					secret_type = secret_tentacle_slave 
					NOT = { is_known_by = ROOT }
				}
				reveal_to = ROOT
			}
		}
	}
}
#发现对方是奴隶
tentacle_degenerate_scheme.9998 = {
	type = character_event
	title = tentacle_degenerate_scheme.9998.t
	desc = tentacle_degenerate_scheme.9998.desc
	
	theme = intrigue
	left_portrait = {
		character = scope:target
		animation = rage
	}
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}
	weight_multiplier = { 
		base = 0
		modifier = { #目标是奴隶，并且正在接受赐福，则得知情况
			add = 10
			scope:target = { 
				is_tentacle_slave = yes
				has_character_flag = is_being_tentacled
			}
		}
	}
	option = {
		name = tentacle_degenerate_scheme.9998.a
		scope:target = {
			random_secret = {
				limit = { 
					secret_type = secret_tentacle_slave 
					NOT = { is_known_by = scope:owner }
				}
				reveal_to = scope:owner
			}
		}
	}
}
#ai发起恶堕
tentacle_degenerate_scheme.9999 = {
	hidden = yes

	trigger = { 
		#ai
		is_ai = yes
		#能够发起恶堕密谋
		is_tentacle_slave = yes
		#至少要有一些阴谋能力
		intrigue >= 8
		#快死奴隶就不要占用资源了，反正也完不成
		is_tentaclable_female = yes
		#恶堕密谋数量没用完
		trigger_if = {
			limit = { has_perk = tentacle_corruption_62_perk }
			any_scheme = {
				count < 3
				scheme_type = tentacle_degenerate
			}
		}
		trigger_else = {
			NOT = {
				any_scheme = {
					scheme_type = tentacle_degenerate
				}
			}
		}
		#没有在夺地
		NOT = {
			any_scheme = {
				scheme_type = tentacle_slave_claim_throne
			}
		}
	}
	immediate = {
		save_scope_as = actor
		
		#寻找潜在的恶堕目标
		#如果没有搜寻过目标，指定自己，为起点
		if = {
			limit = { 
				NOT = { has_variable = tentacle_degenerate_scheme_target }
			}
			set_variable = {
				name = tentacle_degenerate_scheme_target
				value = scope:actor
			}
		}
		#如果目标不合法了，指定自己，为起点
		if = {
			limit = { 
				var:tentacle_degenerate_scheme_target = {
					OR = {
						is_alive = no
						is_pool_character = yes
						NOT = { in_diplomatic_range = scope:actor }
					}
				}
			}
			set_variable = {
				name = tentacle_degenerate_scheme_target
				value = scope:actor
			}
		}
		if = { #如果目标有位置,寻找当前位置宫廷的持有者成为目标
			limit = {
				exists = var:tentacle_degenerate_scheme_target.location
				exists = var:tentacle_degenerate_scheme_target.location.county
				exists = var:tentacle_degenerate_scheme_target.location.county.holder
			}
			set_variable = {
				name = tentacle_degenerate_scheme_target
				value = var:tentacle_degenerate_scheme_target.location.county.holder
			}
		}
		#针对目标所在宫廷发起恶堕
		var:tentacle_degenerate_scheme_target = { 
			if = { #目标自己
				limit = {
					is_tentaclable_female = yes
					effective_age <= 35
					is_imprisoned = no
					is_tentacle_slave = no
					NOT = { THIS = scope:actor }
					NOT = { has_strong_hook = scope:actor }
					scope:actor = {
						can_start_scheme = {
							type = tentacle_degenerate
							target = PREV
						}
					}
				}
				save_scope_as = recipient
			}
			#考虑一下目标的夫人？
			if = {
				limit = {
					NOT = { exists = scope:recipient }
				}
				random_spouse = {
					limit = {
						is_tentaclable_female = yes
						effective_age <= 35
						is_imprisoned = no
						is_tentacle_slave = no
						NOT = { THIS = scope:actor }
						NOT = { has_strong_hook = scope:actor }
						scope:actor = {
							can_start_scheme = {
								type = tentacle_degenerate
								target = PREV
							}
						}
					}
					save_scope_as = recipient
				}
			}
			#考虑一下目标的亲人？
			if = {
				limit = {
					NOT = { exists = scope:recipient }
				}
				random_close_family_member = {
					limit = {
						is_tentaclable_female = yes
						effective_age <= 35
						is_imprisoned = no
						is_tentacle_slave = no
						NOT = { THIS = scope:actor }
						NOT = { has_strong_hook = scope:actor }
						scope:actor = {
							can_start_scheme = {
								type = tentacle_degenerate
								target = PREV
							}
						}
					}
					save_scope_as = recipient
				}
			}
			#考虑一下目标的其他廷臣？
			if = {
				limit = {
					NOT = { exists = scope:recipient }
				}
				random_courtier_or_guest = {
					limit = {
						is_tentaclable_female = yes
						effective_age <= 35
						is_imprisoned = no
						is_tentacle_slave = no
						NOT = { THIS = scope:actor }
						NOT = { has_strong_hook = scope:actor }
						scope:actor = {
							can_start_scheme = {
								type = tentacle_degenerate
								target = PREV
							}
						}
					}
					save_scope_as = recipient
				}
			}
		}
		#目标跳转,附近领主或者亲属
		var:tentacle_degenerate_scheme_target = {
			if = {
				limit = { is_landed = yes }
				random_character_to_title_neighboring_and_across_water_county = {
					holder = {
						save_scope_as = new_target
					}
				}
			}
			else = {
				random_close_or_extended_family_member = {
					save_scope_as = new_target
				}
			}
		}
		if = {
			limit = {
				exists = scope:new_target
			}
			set_variable = {
				name = tentacle_degenerate_scheme_target
				value = scope:new_target
			}
		}
		#发动恶堕计谋
		if = {
			limit = {
				exists = scope:recipient
			}
			start_scheme = {
				type = tentacle_degenerate
				target = scope:recipient
			}
		}
	}
}