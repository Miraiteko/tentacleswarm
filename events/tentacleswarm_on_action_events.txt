#宫廷事件
#0001 统治者年度检查
namespace = tentacleswarm_on_action_events

tentacleswarm_on_action_events.0001 = {
	hidden = yes
	immediate = { 
		#计算统治者的宫廷会带来多大的腐化度 
		set_variable =  { name = tentacleswarm_corruption_add value = 0} 	#基础
		if = {
			limit = { is_tentacle_slave = yes } 
			change_variable =  { name = tentacleswarm_corruption_add add = 0 } #如果统治者是奴隶
		}	
		if = {
			limit = { 
				has_character_modifier = tentacleswarm_spread
			}
			change_variable =  { name = tentacleswarm_corruption_add add = 20 }  #如果统治者执行播种令
		}
		every_spouse = {
			limit = { 
				is_tentacle_slave = yes  
				is_in_the_same_court_as_or_guest = PREV
			}
			PREV = { change_variable =  { name = tentacleswarm_corruption_add add = 0 } }#如果配偶是奴隶，配偶需要在宫廷
		}
		every_courtier_or_guest = {
			limit = { is_tentacle_slave = yes  }
			PREV = { change_variable =  { name = tentacleswarm_corruption_add add = 0 } }#如果宾客是奴隶
		}
		if = { #雇佣了播种人
			limit = {
				employs_court_position = tentacle_missionary_court_position
			}
			every_court_position_holder = {
				type = tentacle_missionary_court_position
				#根据称职度程度给予腐化
				if = {
					limit = {
						aptitude = {
							court_position = tentacle_missionary_court_position
							value = 1
						}
					}
					PREV = { change_variable =  { name = tentacleswarm_corruption_add add = 5 } }
				}
				else_if = {
					limit = {
						aptitude = {
							court_position = tentacle_missionary_court_position
							value = 2
						}
					}
					PREV = { change_variable =  { name = tentacleswarm_corruption_add add = 10 } }
				}
				else_if = {
					limit = {
						aptitude = {
							court_position = tentacle_missionary_court_position
							value = 3 
						}
					}
					PREV = { change_variable =  { name = tentacleswarm_corruption_add add = 15 } }
				}
				else_if = {
					limit = {
						aptitude = {
							court_position = tentacle_missionary_court_position
							value = 4
						}
					}
					PREV = { change_variable =  { name = tentacleswarm_corruption_add add = 20 } }
				}
				else = {
					PREV = { change_variable =  { name = tentacleswarm_corruption_add add = 25 } }
				}
			}
		}
		
		if = { #如果依然持有土地的话
			limit = { 
				is_alive = yes
				is_landed = yes 
			}
		
			#为每个伯爵领结算腐化度
			every_held_title = {
				limit = { tier = tier_county }
				save_scope_as = county
				
				#先计算效果导致的变化
				change_variable =  { #宫廷效果
					name = tentacleswarm_corruption 
					add = holder.var:tentacleswarm_corruption_add
				}
				change_variable =  { #自然效果
					name = tentacleswarm_corruption 
					add = var:tentacleswarm_corruption_nature
				}
				
				#接下来计算发展度导致的变化
				#计算有多少怪物吃饱了
				set_variable =  { 
					name = tentacleswarm_corruption_fed
					value = {
						value = var:tentacleswarm_corruption
						multiply = tentacleswarm_corruption_decay_value_minus
					}
				}
				#计算有多少怪物没吃饱
				set_variable =  { 
					name = tentacleswarm_corruption_decrease 
					value = {
						value = var:tentacleswarm_corruption
						multiply = tentacleswarm_corruption_decay_value
					}
				}
				if = { #大于1才结算
					limit = { var:tentacleswarm_corruption_fed = { compare_value > 1 } } 
					#吃饱怪物造成发展度下降
					change_development_progress_with_overflow = {
						value = var:tentacleswarm_corruption_fed
						multiply = -0.2
					}
					#吃饱的会继续繁殖
					change_variable =  { 
						name = tentacleswarm_corruption 
						add = {
							value = var:tentacleswarm_corruption_fed
							multiply = 0.05
						}
					}
				}
				
				#没吃饱的情况
				if = { #大于1才结算
					limit = { var:tentacleswarm_corruption_decrease = { compare_value > 1 } } 
					
					#没吃饱的怪物润了或者死了
					change_variable =  { name = tentacleswarm_corruption subtract = var:tentacleswarm_corruption_decrease }
					
					#40%润一个相邻伯爵领，至少要5发展度，没地方可润就死了
					random_title_to_title_neighboring_and_across_water_county = {
						limit = {
							development_level >= 5
						}
						change_variable =  {
							name = tentacleswarm_corruption 
							add = {
								value = scope:county.var:tentacleswarm_corruption_decrease 
								multiply = 0.40
							}
						}
						tentacleswarm_corruption_county_check = yes
					}					
					#30%润一个相邻伯爵领，至少要2发展度，没地方可润就死了
					random_title_to_title_neighboring_and_across_water_county = {
						limit = {
							development_level >= 3
						}
						change_variable =  {
							name = tentacleswarm_corruption 
							add = {
								value = scope:county.var:tentacleswarm_corruption_decrease 
								multiply = 0.30
							}
						}
						tentacleswarm_corruption_county_check = yes
					}			
					#20%润一个相邻伯爵领，至少要1发展度，没地方可润就死了
					random_title_to_title_neighboring_and_across_water_county = {
						limit = {
							development_level >= 1
						}
						change_variable =  {
							name = tentacleswarm_corruption 
							add = {
								value = scope:county.var:tentacleswarm_corruption_decrease 
								multiply = 0.20
							}
						}
						tentacleswarm_corruption_county_check = yes
					}
					#还有10%是直接死了的
				}
				
				#数值计算完毕，进行结算
				#五档：10,20,35,60,100
				tentacleswarm_corruption_county_check = yes #根据腐化程度结算效果：改颜色，改buff,
			}
		}
		#成就相关
		tentacleswarm_check = yes
	}
}