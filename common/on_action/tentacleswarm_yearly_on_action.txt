#全局年度触发
yearly_global_pulse = {
	on_actions = { 
		tentacleswarm_yearly_global_pulse
	}
}
tentacleswarm_yearly_global_pulse = {
	effect = {
		#切分领主对象，避免O(n^2)的运算
		clear_global_variable_list = tentacleswarm_slave_ruler #奴隶领主
		clear_global_variable_list = tentacleswarm_main_slave_ruler #公爵以上奴隶领主
		clear_global_variable_list = tentacleswarm_target_ruler #目标领主
		clear_global_variable_list = tentacleswarm_main_target_ruler #公爵以上目标领主
		clear_global_variable_list = tentacleswarm_protected_ruler #被保护的领主
		
		every_ruler = {
			limit = { highest_held_title_tier >= tier_county } #只考虑伯爵以上
			add_to_global_variable_list = { name = tentacleswarm_main_target_ruler target = this }
			if = {#奴隶领主
				limit = { has_religion = religion:tentacleswarm_religion }
				add_to_global_variable_list = { name = tentacleswarm_slave_ruler target = this }	
				if = {
					limit = {
						highest_held_title_tier >= tier_duchy 
						is_independent_ruler = yes
					}
					add_to_global_variable_list = { name = tentacleswarm_main_slave_ruler target = this }
				}
			}
			else_if = {
				limit = { 
					any_held_title = {
						tier = tier_county
						development_level > 0
					}
				}
				add_to_global_variable_list = { name = tentacleswarm_target_ruler target = this }	
				if = {
					limit = {
						highest_held_title_tier >= tier_duchy 
						is_independent_ruler = yes
					}
					add_to_global_variable_list = { name = tentacleswarm_main_target_ruler target = this }
				}
			}
			else = {
				add_to_global_variable_list = { name = tentacleswarm_protected_ruler target = this }	
			}
		}
	}
}
#每个人年度触发
random_yearly_everyone_pulse = {
	on_actions = { 
		tentacleswarm_bliever_yearly
		tentacle_slave_yearly
	}
}
tentacleswarm_bliever_yearly = { #触手信徒年度触发
	trigger = {
		has_religion = religion:tentacleswarm_religion
	}
	effect = {
		if = { #没有成为奴隶的成年女性成为奴隶
			limit = {
				is_female = yes
				is_adult = yes
				not = { has_trait = tentacle_slave }
			}
			add_trait = tentacle_slave
		}
	}
}
tentacle_slave_yearly = {
	trigger = {
		is_tentacle_slave = yes
	}
	effect = {
		if = { #自己是潜藏的统治者的话，查看首都巨兽储备决定是否起事
			limit = { 
				is_landed = yes
				highest_held_title_tier >=tier_county
				any_secret = { secret_type = secret_tentacle_slave }
			}
			if = {
				limit = {
					capital_county = {
						var:tentacleswarm_corruption_warbeast = { compare_value >= 500 }
					}
				}
				#改信，释放费洛蒙
				convert_to_tentacleswarm_religion = yes
				tentacleswarm_4VA = yes
			}
		}
		else_if = {
			limit = {
				#已经暴露的统治者，皈依正统信仰
				is_ruler = yes
				has_trait = tentacle_slave
			}
			convert_to_tentacleswarm_religion = yes
		}
		else_if = {
			limit = {
				#如果上头有人，皈依正统信仰,揭露身份
				any_liege_or_above = { has_religion = religion:tentacleswarm_religion }
			}
			convert_to_tentacleswarm_religion = yes
		}
		else = {
			#如果上头没人，跟风当地信仰
			if = {
				limit = {
					has_religion = religion:tentacleswarm_religion 
					exists = location
					exists = location.faith
				}
				set_character_faith = location.faith
			}
			#根据新信仰选择是否要将身份藏起来
			if = {
				limit = {
					has_trait = tentacle_slave
					NOT = { has_character_flag = exposed_tentacle_slave } #被揭发的无法藏身
				} 
				remove_trait = tentacle_slave
				become_tentacle_slave = yes
			}
		}
		if = {
			limit = {
				any_spouse = {
					is_landed = yes #配偶有地，尝试密谋夺取
					highest_held_title_tier >= tier_county
					capital_county = {
						var:tentacleswarm_corruption_warbeast = { compare_value >= 500 }
					}
				}
				Not = { 
					any_scheme = {
						is_hostile = yes
					}
				}
			}
			random_spouse = {
				limit = { holds_landed_title = yes }
				save_scope_as = target
			}
			start_scheme = {
				type = tentacle_slave_claim_throne
				target = scope:target
			}
		}
		if = {
			limit = {
				exists = father
				father = {
					is_landed = yes #父亲有地，尝试密谋夺取
					highest_held_title_tier >= tier_county
					capital_county = {
						var:tentacleswarm_corruption_warbeast = { compare_value >= 500 }
					}
				}
				Not = { 
					any_scheme = {
						is_hostile = yes
					}
				}
			}
			father = {
				limit = { holds_landed_title = yes }
				save_scope_as = target
			}
			start_scheme = {
				type = tentacle_slave_claim_throne
				target = scope:target
			}
		}
	}
}
#每年触发
yearly_playable_pulse = {
	on_actions = {
		tentacleswarm_yearly_playable_pulse
	}
}
tentacleswarm_yearly_playable_pulse = {
	effect = {
		#计算统治者的宫廷会带来多大的腐化度
		set_variable =  { name = tentacleswarm_corruption_add value = 0} 	#基础
		if = {
			limit = { is_tentacle_slave = yes } 
			change_variable =  { name = tentacleswarm_corruption_add add = 7 } #如果统治者是奴隶
		}	
		if = {
			limit = { has_religion = religion:tentacleswarm_religion } 
			change_variable =  { name = tentacleswarm_corruption_add add = 0 } #如果统治者信奉触手宗教
		}
		every_spouse = {
			limit = { is_tentacle_slave = yes  }
			PREV = { change_variable =  { name = tentacleswarm_corruption_add add = 3 } }#如果配偶是触手奴隶，配偶一般也是宾客
		}
		every_spouse = {
			limit = { has_religion = religion:tentacleswarm_religion  }
			PREV = { change_variable =  { name = tentacleswarm_corruption_add add = 0 } }#如果配偶信奉触手宗教
		}
		every_courtier_or_guest = {
			limit = { is_tentacle_slave = yes  }
			PREV = { change_variable =  { name = tentacleswarm_corruption_add add = 1 } }#如果宾客是触手奴隶
		}
		every_courtier_or_guest = {
			limit = { has_religion = religion:tentacleswarm_religion  }
			PREV = { change_variable =  { name = tentacleswarm_corruption_add add = 0  } }#如果宾客信奉触手宗教
		}
		if = {
			limit = { #摧毁失去所有栖息地的触手领主的国家
				has_religion = religion:tentacleswarm_religion
				NOT = {
					any_held_title = {
						tier = tier_county
						NOT = { has_county_modifier = tentacleswarm_destroy }
					}
				}
			}
			every_held_title = { #伯爵以上头衔摧毁
				limit = { tier > tier_county }
				save_scope_as = target
				root = { destroy_title = scope:target }
			}
			#废弃的土地，随便找个人拿
			random_held_title = {
				limit = { 
					tier = tier_county 
					NOT = { is_in_list = titles_taken }#不是刚拿的头衔
					has_county_modifier = tentacleswarm_destroy
				}
				save_scope_as = target
				random_living_character = {
					limit = {
						is_pool_character = yes
						is_tentacle_slave = no
						not = { has_religion = religion:tentacleswarm_religion }
						has_culture_group = scope:target.culture_group
					}
					save_scope_as = lucky
				}
				if = {
					limit = { NOT = { exists = scope:lucky }  }
					random_living_character = {
						limit = {
							is_pool_character = yes
							is_tentacle_slave = no
							not = { has_religion = religion:tentacleswarm_religion }
						}
						save_scope_as = lucky
					}
				}
			}
			every_held_title = { 
				limit = { 
					tier = tier_county 
					NOT = { is_in_list = titles_taken }#不是刚拿的头衔
					has_county_modifier = tentacleswarm_destroy
				}
				save_scope_as = target
				create_title_and_vassal_change = {
					type = usurped
					save_scope_as = change
					add_claim_on_loss = yes
				}
				scope:target = {#拿头衔
					change_title_holder_include_vassals = {
						holder = scope:lucky
						change = scope:change
					}
				}
				scope:lucky = {#独立
					becomes_independent = { change = scope:change }
				}
				resolve_title_and_vassal_change = scope:change
			}
			#被杀掉
			death = { death_reason = death_ritually_hung_then_eaten } #在仪式中被扼死，然后吃掉
		}
		#为每个伯爵领结算腐化度
		every_held_title = {
			limit = { tier = tier_county }
			#如果发展度太低了，直接废弃
			if = {
				limit = { 
					development_level < 1
					NOT = { has_county_modifier = tentacleswarm_destroy }
					var:tentacleswarm_corruption = { compare_value >= 20 }
				}
				save_scope_as = destroy
				#腐化转移到相邻地区
				random_title_to_title_neighboring_and_across_water_county = {
					limit = {
						NOT = { has_county_modifier = tentacleswarm_destroy }
					}
					change_variable =  { name = tentacleswarm_corruption add = scope:destroy.var:tentacleswarm_corruption }
					change_variable =  { name = tentacleswarm_corruption_warbeast add = scope:destroy.var:tentacleswarm_corruption_warbeast }
				}
				set_variable =  { name = tentacleswarm_corruption value = 0 }
				set_variable =  { name = tentacleswarm_corruption_warbeast value = 0 }
				#变颜色
				every_county_province = {
					barony = { set_color_from_title = title:d_tentacleswarm_destroy }
				}
				add_county_modifier = { modifier = tentacleswarm_destroy years = 30} #30年发展度惩罚
				
				#清buff
				if = {
					limit = { has_county_modifier = tentacleswarm_corruption_1 }
					remove_county_modifier = tentacleswarm_corruption_1
				}
				if = {
					limit = { has_county_modifier = tentacleswarm_corruption_2 }
					remove_county_modifier = tentacleswarm_corruption_2
				}
				if = {
					limit = { has_county_modifier = tentacleswarm_corruption_3 }
					remove_county_modifier = tentacleswarm_corruption_3
				}
				if = {
					limit = { has_county_modifier = tentacleswarm_corruption_4 }
					remove_county_modifier = tentacleswarm_corruption_4
				}
				if = {
					limit = { has_county_modifier = tentacleswarm_corruption_5 }
					remove_county_modifier = tentacleswarm_corruption_5
				}
			}
			else_if = { #已经被废弃的土地，不结算滋生
				limit = { 
					has_county_modifier = tentacleswarm_destroy
				}
			}
			#否则，进行滋生
			else = {
				#计算自然增长率
				set_variable =  { name = tentacleswarm_corruption_growth value = 60 } #基础为每年-40%	
				if = {
					limit = { county_controller = { is_tentacle_slave = yes } }
					change_variable =  { name = tentacleswarm_corruption_growth add = 0 } #如果控制者是奴隶抵消衰减
				}	
				if = {
					limit = { county_controller = { has_religion = religion:tentacleswarm_religion } }
					change_variable =  { name = tentacleswarm_corruption_growth add = 20 } #如果控制者信奉触手宗教抵消衰减
				}
				if = {
					limit = { religion = religion:tentacleswarm_religion }
					change_variable =  { name = tentacleswarm_corruption_growth add = 40 } #如果本地信奉触手宗教抵消衰减
				}		
				change_variable =  { name = tentacleswarm_corruption_growth add = development_level }#每点发展度抵消1衰减
				if = {
					limit = { var:tentacleswarm_corruption_growth = { compare_value > 100 } }
					set_variable =  { name = tentacleswarm_corruption_growth value = 100 }
				}	
				
				#计算腐化度自然增长
				change_variable =  { name = tentacleswarm_corruption multiply = var:tentacleswarm_corruption_growth }
				change_variable =  { name = tentacleswarm_corruption multiply = 0.01 }#百分数转小数
				
				#领主宫廷带来的增长
				change_variable =  { name = tentacleswarm_corruption add = holder.var:tentacleswarm_corruption_add }
			
				#计算地形带来的影响
				change_variable =  { name = tentacleswarm_corruption add = var:tentacleswarm_corruption_nature }
				
				#腐化上限
				if = {
					limit = { var:tentacleswarm_corruption = { compare_value > 200 } }
					set_variable =  { name = tentacleswarm_corruption value = 200 }
				}
				
				#根据腐蚀程度，改buff,改颜色，污染周遭，生长军队
				if = {
					limit = {
						var:tentacleswarm_corruption = { compare_value < 20 }
					}
					if = {
						limit = { has_county_modifier = tentacleswarm_corruption_1 }
						remove_county_modifier = tentacleswarm_corruption_1
					}
					if = {
						limit = { has_county_modifier = tentacleswarm_corruption_2 }
						remove_county_modifier = tentacleswarm_corruption_2
					}
					if = {
						limit = { has_county_modifier = tentacleswarm_corruption_3 }
						remove_county_modifier = tentacleswarm_corruption_3
					}
					if = {
						limit = { has_county_modifier = tentacleswarm_corruption_4 }
						remove_county_modifier = tentacleswarm_corruption_4
					}
					if = {
						limit = { has_county_modifier = tentacleswarm_corruption_5 }
						remove_county_modifier = tentacleswarm_corruption_5
					}
					every_county_province = {
						barony = { set_color_from_title = title:d_very_low_corruption_province }
					}
					random_title_to_title_neighboring_and_across_water_county = {
						limit = {
							NOT = { has_county_modifier = tentacleswarm_destroy }
							var:tentacleswarm_corruption = { compare_value < 0 } 
						}
						change_variable =  { name = tentacleswarm_corruption add = 0 }
					}
					change_variable =  { name = tentacleswarm_corruption_warbeast add = 0 }
				}
				else_if = {
					limit = {
						var:tentacleswarm_corruption = { compare_value < 40 }
					}
					if = {
						limit = { NOT = {has_county_modifier = tentacleswarm_corruption_1 }}
						add_county_modifier = tentacleswarm_corruption_1
					}
					if = {
						limit = { has_county_modifier = tentacleswarm_corruption_2 }
						remove_county_modifier = tentacleswarm_corruption_2
					}
					if = {
						limit = { has_county_modifier = tentacleswarm_corruption_3 }
						remove_county_modifier = tentacleswarm_corruption_3
					}
					if = {
						limit = { has_county_modifier = tentacleswarm_corruption_4 }
						remove_county_modifier = tentacleswarm_corruption_4
					}
					if = {
						limit = { has_county_modifier = tentacleswarm_corruption_5 }
						remove_county_modifier = tentacleswarm_corruption_5
					}
					every_county_province = {
						barony = { set_color_from_title = title:d_low_corruption_province } 
					}
					random_title_to_title_neighboring_and_across_water_county = {
						limit = {
							NOT = { has_county_modifier = tentacleswarm_destroy }
							var:tentacleswarm_corruption = { compare_value < 20 } 
						}
						change_variable =  { name = tentacleswarm_corruption add = 5 }
					}
					change_development_progress_with_overflow = -15
					change_variable =  { name = tentacleswarm_corruption_warbeast add = 15 }
				}
				else_if = {
					limit = {
						var:tentacleswarm_corruption = { compare_value < 60 }
					}
					if = {
						limit = { has_county_modifier = tentacleswarm_corruption_1 }
						remove_county_modifier = tentacleswarm_corruption_1
					}
					if = {
						limit = { NOT = { has_county_modifier = tentacleswarm_corruption_2 }}
						add_county_modifier = tentacleswarm_corruption_2
					}
					if = {
						limit = { has_county_modifier = tentacleswarm_corruption_3 }
						remove_county_modifier = tentacleswarm_corruption_3
					}
					if = {
						limit = { has_county_modifier = tentacleswarm_corruption_4 }
						remove_county_modifier = tentacleswarm_corruption_4
					}
					if = {
						limit = { has_county_modifier = tentacleswarm_corruption_5 }
						remove_county_modifier = tentacleswarm_corruption_5
					}
					every_county_province = {
						barony = { set_color_from_title = title:d_mid_corruption_province } 
					}
					random_title_to_title_neighboring_and_across_water_county = {
						limit = {
							NOT = { has_county_modifier = tentacleswarm_destroy }
							var:tentacleswarm_corruption = { compare_value < 40 } 
						}
						change_variable =  { name = tentacleswarm_corruption add = 10 }
					}
					change_development_progress_with_overflow = -30
					change_variable =  { name = tentacleswarm_corruption_warbeast add = 30 }
				}
				else_if = {
					limit = {
						var:tentacleswarm_corruption = { compare_value < 80 }
					}
					every_county_province = {
						barony = { set_color_from_title = title:d_high_corruption_province } 
					}
					if = {
						limit = { has_county_modifier = tentacleswarm_corruption_1 }
						remove_county_modifier = tentacleswarm_corruption_1
					}
					if = {
						limit = { has_county_modifier = tentacleswarm_corruption_2 }
						remove_county_modifier = tentacleswarm_corruption_2
					}
					if = {
						limit = { NOT ={ has_county_modifier = tentacleswarm_corruption_3 }}
						add_county_modifier = tentacleswarm_corruption_3
					}
					if = {
						limit = { has_county_modifier = tentacleswarm_corruption_4 }
						remove_county_modifier = tentacleswarm_corruption_4
					}
					if = {
						limit = { has_county_modifier = tentacleswarm_corruption_5 }
						remove_county_modifier = tentacleswarm_corruption_5
					}
					random_title_to_title_neighboring_and_across_water_county = {
						limit = {
							NOT = { has_county_modifier = tentacleswarm_destroy }
							var:tentacleswarm_corruption = { compare_value < 60 } 
						}
						change_variable =  { name = tentacleswarm_corruption add = 15 }
					}
					change_development_progress_with_overflow = -45
					change_variable =  { name = tentacleswarm_corruption_warbeast add = 45 }
				}
				else_if = {
					limit = {
						var:tentacleswarm_corruption = { compare_value < 100 }
					}
					every_county_province = {
						barony = { set_color_from_title = title:d_very_high_corruption_province } 
					}
					if = {
						limit = { has_county_modifier = tentacleswarm_corruption_1 }
						remove_county_modifier = tentacleswarm_corruption_1
					}
					if = {
						limit = { has_county_modifier = tentacleswarm_corruption_2 }
						remove_county_modifier = tentacleswarm_corruption_2
					}
					if = {
						limit = { has_county_modifier = tentacleswarm_corruption_3 }
						remove_county_modifier = tentacleswarm_corruption_3
					}
					if = {
						limit = { NOT = {has_county_modifier = tentacleswarm_corruption_4 }}
						add_county_modifier = tentacleswarm_corruption_4
					}
					if = {
						limit = { has_county_modifier = tentacleswarm_corruption_5 }
						remove_county_modifier = tentacleswarm_corruption_5
					}
					random_title_to_title_neighboring_and_across_water_county = {
						limit = {
							NOT = { has_county_modifier = tentacleswarm_destroy }
							var:tentacleswarm_corruption = { compare_value < 80 } 
						}
						change_variable =  { name = tentacleswarm_corruption add = 20 }
					}
					change_development_progress_with_overflow = -60
					change_variable =  { name = tentacleswarm_corruption_warbeast add = 60 }
				}
				else = {
					every_county_province = {
						barony = { set_color_from_title = title:d_hell_corruption_province } 
					}
					if = {
						limit = { has_county_modifier = tentacleswarm_corruption_1 }
						remove_county_modifier = tentacleswarm_corruption_1
					}
					if = {
						limit = { has_county_modifier = tentacleswarm_corruption_2 }
						remove_county_modifier = tentacleswarm_corruption_2
					}
					if = {
						limit = { has_county_modifier = tentacleswarm_corruption_3 }
						remove_county_modifier = tentacleswarm_corruption_3
					}
					if = {
						limit = { has_county_modifier = tentacleswarm_corruption_4 }
						remove_county_modifier = tentacleswarm_corruption_4
					}
					if = {
						limit = { NOT = {has_county_modifier = tentacleswarm_corruption_5 }}
						add_county_modifier = tentacleswarm_corruption_5
					}
					random_title_to_title_neighboring_and_across_water_county = {
						limit = {
							NOT = { has_county_modifier = tentacleswarm_destroy }
							var:tentacleswarm_corruption = { compare_value < 100 } 
						}
						change_variable =  { name = tentacleswarm_corruption add = 25 }
					}
					change_development_progress_with_overflow = -75
					change_variable =  { name = tentacleswarm_corruption_warbeast add = 75 }
				}
				if = {
					limit = { #本宗教领主在集齐点数之后可以换购巨兽
						var:tentacleswarm_corruption_warbeast = { compare_value >= 100 }
						holder = {has_religion = religion:tentacleswarm_religion }
					}
					change_variable =  { name = tentacleswarm_corruption_warbeast add = -100 }
					holder = { #战争巨兽
						spawn_army = {
							men_at_arms = {
								type = tentacleswarm_warbeast
								stacks = 1 #1组，一组十只
							}
							location = root.capital_province
							name = tentacleswarm_warbeast_event_troops
						}
						add_gold = 100
						add_piety = 50
					}
				}
			}
		}
	}
}
#每年随机触发
random_yearly_playable_pulse = {
	#自带的条件，诸如有地未被囚禁等等
	#trigger = { basic_is_valid_for_yearly_events_trigger = yes }
	on_actions = {
		tentacleswarm_random_yearly_playable_pulse	
	}
}
tentacleswarm_random_yearly_playable_pulse = {
	trigger = { 
		basic_is_valid_for_yearly_events_trigger = yes 
	}
	effect = {
		#远征。通常的触手征服只会打相邻的目标，我们现在让AI进行远征
		if = {
			limit = {
				has_religion = religion:tentacleswarm_religion
				is_ai = yes
				is_at_war = no
				capital_county = {  #首都发展度不足了
					development_level <= 8
				}
				max_military_strength > 4000
			}
			save_scope_as = actor
			#搜索最大发展度的土地
			scope:actor = {
				set_variable =  { name = max_held_development value = 1 }
				every_held_title = {
					limit = { 
						tier = tier_county
					}
					if = {
						limit = { 
							development_level > scope:actor.var:max_held_development
						}
						scope:actor = { set_variable =  { name = max_held_development value = prev.development_level }}
					}
				}
				change_variable = { name = max_held_development multiply = 2 } #目标地要是原来的两倍以上发展度
			}
			random_in_global_list = {
				variable = tentacleswarm_main_target_ruler
				limit = {
					highest_held_title_tier >= tier_duchy #不啃独立小伯爵
					is_landed = yes #有地
					NOT = { has_religion = religion:tentacleswarm_religion } #异教
					capital_county = {  #首都有较高发展度
						development_level >= scope:actor.var:max_held_development
					}
					ROOT = { #需要符合宣战条件
						is_character_interaction_valid = {
						   recipient = PREV
						   interaction = declare_war_interaction
						}
					}
				}
				save_scope_as = target_character
				save_scope_as = recipient
				random_held_title = {
					limit = { 
						tier = tier_county 
						development_level >= scope:actor.var:max_held_development
					}
					save_scope_as = target
				}
				if = {
					limit = {
						war_declarer_needs_hook_on_liege = no #不需要领主同意就能发动战争
					}
					scope:actor = {
						start_war = { 
							casus_belli = tentacleswarm_conquest 
							target = scope:target_character
							target_title = scope:target.kingdom
						}
					}
				}
			}
		}
	}
}