tentacleswarm_force_death_interaction = { #赐予解放
	category = interaction_category_vassal
	interface_priority = 61
	
	ai_maybe = yes
	ai_min_reply_days = 4
	ai_max_reply_days = 9
	
	can_send_despite_rejection = yes #即使会失败也能寄出要求
	
	popup_on_receive = yes
	pause_on_receive = yes#收到要求时弹出提示并暂停
	
	desc = tentacleswarm_force_death_interaction_desc
	
	greeting = positive
	notification_text = TENTACLESWARM_FORCE_DEATH_INTERACTION_NOTIFICATION
	
	cooldown_against_recipient = { years = 3 } #冷却时间
	
	is_shown = {
		scope:actor = { has_government = tentacleswarm_government }
		NOT = { scope:recipient = scope:actor }#不能搞自己
		scope:actor  = {
			highest_held_title_tier >= tier_duchy
			is_landed = yes
		}
		scope:recipient = { 
			is_vassal_or_below_of = scope:actor #是我境内的封臣
		}
	}

	is_valid = {
		scope:recipient = { 
			is_vassal_or_below_of = scope:actor #是我境内的封臣
			highest_held_title_tier >= tier_county #伯爵以上
			#has_government = tentacleswarm_government #同为奴隶摄政
			is_landed = yes
		}
	}

	on_send = {
	}
	on_accept = {
		#扒头衔
		create_title_and_vassal_change = {
			type = revoked
			save_scope_as = change
		}
		scope:recipient = {
			every_held_title = {
				limit = { tier = tier_county }
				change_title_holder = {
					holder = scope:actor
					change = scope:change
				}
			}
		}
		resolve_title_and_vassal_change = scope:change
		
		scope:recipient = {
			#钱扒光
			if = {
				limit = {
					this.gold > 0
				}
				pay_short_term_gold = { target = scope:actor gold = this.gold }
			}
			#死掉
			death = { death_reason = death_disappearance }
		}
	}
	
	
	on_decline = {
		scope:actor = {
			add_opinion = {
				target = scope:recipient
				modifier = vassal_lost_faction_revolt_war
				years = 5
			}
		}
	}
	
	auto_accept = {
		scope:recipient = { is_imprisoned_by = scope:actor } #我的囚犯不能拒绝
	}
	
	ai_accept = {
		base = 0
		modifier = { 
			scope:recipient = {
				is_tentacle_slave = yes
			}
			add = 1000
			desc = IS_TENTACLE_SLAVE_REASON
		}
	}
	ai_potential = {
		highest_held_title_tier > tier_duchy
		NOT = { is_close_or_extended_family_of = scope:recipient }#AI不会对近亲使用
	}
	
	ai_frequency = 3 #AI多久考虑一次	
		
	ai_targets = {
		ai_recipients = vassals
	}
	ai_will_do = {
		base = 300
	}
}