#腐化为奴隶
tentacle_corrupt = {
	
	skill = intrigue
	desc = "tentacle_corrupt_desc_general"
	hostile = yes
	icon = icon_scheme_hostile

	power_per_skill_point = 10
	resistance_per_skill_point = 1
	power_per_agent_skill_point = 1
	
	minimum_progress_chance = 99
	maximum_progress_chance = 99
	maximum_secrecy = 99
	minimum_success = 10
	maximum_success = 99
	
	allow = {
		debug_only = yes
		is_ai = no
		#is_tentacle_slave = yes
		is_imprisoned = no
	}
	
	valid = {
		scope:target = {
			is_tentaclable_female = yes
			is_imprisoned = no
			NOT = { has_trait = tentacle_slave } #如果本来就公开了，没必要再下手了
			trigger_if = {#如果知道对方是隐藏的奴隶了，就没必要再下手了
				limit = {
					any_secret = {
						secret_type = secret_tentacle_slave
						is_known_by = scope:owner
					}
				}
				is_tentacle_slave = no
			}
			exists = location
			in_diplomatic_range = scope:owner 
		}
	}

	valid_agent = {
		is_tentacle_slave = yes
	}
	
	agent_join_chance = {
		base = 0
		
		# Base Reluctance, including negative AI Energy
		modifier = {
			add = {
				value = -20
				if = {
					limit = {
						ai_energy < 0
					}
					add = {
						value = ai_energy
						multiply = 0.5
					}
				}
			}
			desc = BASE_RELUCTANCE
		}

		#Is Owner sending a gift in the invite interaction?
		modifier = {
			add = bribe_acceptance_value
			exists = scope:gift
			always = scope:gift
			NOT = {
				OR = {
					scope:target = { is_parent_of = root }
					root = { is_parent_of = scope:target }
				}
			}
			desc = "SCHEME_WITH_GIFT"
		}

		#Default Hostile Scheme modifiers
		hostile_murder_agent_base_join_chance_modifier = yes
	}
	
	base_success_chance = {
		base = 0
		
		hostile_scheme_base_chance_modifier = yes
		
		# Spiritual Head of Faith
		modifier = {
			add = -50
			desc = "SCHEME_VS_SPIRITUAL_HOF"
			scope:target = {
				faith = scope:owner.faith
				faith = {
					has_doctrine = doctrine_spiritual_head
				}
				faith = {
					exists = religious_head
					religious_head = {
			 			this = scope:target
			 		}
				}
			}
		}

		# Sponsored Inspiration
		modifier = {
			add = -25
			desc = target_has_sponsored_inspiration
			scope:target = {
				exists = inspiration
				inspiration = { exists = inspiration_sponsor }
			}
		}
		
		# Various penalties
		first_valid = {
			modifier = { # Foreign Rulers are very hard to kidnap
				add = -75
				desc = "sway_foreign_target"
				scope:target = {
					is_ruler = yes
					NOT = {
						scope:target.top_liege = scope:owner.top_liege
					}
				}
			}
			modifier = { # Foreign subjects less so
				add = -40
				desc = "sway_foreign_target"
				scope:target = {
					is_foreign_court_or_pool_guest = no
					NOT = {
						scope:target.top_liege = scope:owner.top_liege
					}
				}
			}
			modifier = { # Rulers are harder to kidnap
				add = -50
				desc = "FABRICATE_HOOK_RULER_TARGET"
				scope:target = {
					is_ruler = yes
					scope:target.top_liege = scope:owner.top_liege
				}
			}
		}
	}
	
	agent_success_chance = {
		base = 0
		
		hostile_scheme_agent_success_chance_modifier = yes #Adds a value depending on their "closeness" to target
	}
	
	agent_leave_threshold = -25
		
	cooldown = { years = 1 }
	is_secret = yes
	base_secrecy = 10

	on_ready = {
		scheme_owner = {
			if = { #避免一天弹两个腐化事件
				limit = {
					always = no
					#has_character_flag = is_in_event_tentacle_corrupt_outcome_0001
				}
				trigger_event = {
					on_action = tentacle_corrupt_outcome
					days = 1
				}
			}
			else = {
				trigger_event = {
					on_action = tentacle_corrupt_outcome
				}
			}
		}
	}

	on_monthly = {
		#hostile_scheme_discovery_chance_effect = yes
		if = {
			limit = {
				NOT = { exists = scope:discovery_event_happening }
			}			
			scheme_owner = {
				trigger_event = {
					on_action = tentacle_corrupt_ongoing
					days = { 1 30 }
				}
			}
		}
	}

	#无效时的告知
	on_invalidated = {
		if = {
			limit = {
				scope:target = { is_alive = no }
			}
			scope:owner = {
				send_interface_toast = {
					title = tentacle_corrupt_scheme_invalidated_title
					left_icon = scope:target
					custom_description_no_bullet = {
						object = scope:target
						text = scheme_target_died
					}
				}
			}
		}
		else_if = {
			limit = {
				scope:target = {
					is_imprisoned = yes
					imprisoner = scope:owner
				}
			}
			scope:owner = {
				send_interface_message = {
					title = tentacle_corrupt_scheme_invalidated_title
					type = abduct_invalidated_i_imprisoned_message
					desc = tentacle_corrupt_scheme_i_imprisoned_them_message
					left_icon = scope:target
				}
			}
		}
		else_if = {
			limit = {
				scope:target = { is_imprisoned = yes }
			}
			scope:target.imprisoner = {
				save_scope_as = other_imprisoner
			}
			scope:owner = {
				send_interface_toast = {
					title = tentacle_corrupt_scheme_invalidated_title
					left_icon = scope:target
					right_icon = scope:other_imprisoner
					custom_description_no_bullet = {
						subject = scope:other_imprisoner
						object = scope:target
						text = scheme_target_imprisoned_by_other
					}
				}
			}
		}
		else_if = {
			limit = {
				scope:target = { 
					NOT = { in_diplomatic_range = scope:owner } 
				}
			}
			scope:owner = {
				send_interface_toast = {
					title = tentacle_corrupt_scheme_invalidated_title
					left_icon = scope:target
					custom_description_no_bullet = {
						object = scope:target
						text = scheme_target_not_in_diplomatic_range
					}
				}
			}
		}
		else_if = {
			limit = {
				#已经是奴隶了
				scope:target = { 
					OR = {
						has_trait = tentacle_slave
						any_secret = {
							secret_type = secret_tentacle_slave
							is_known_by = scope:owner
						}
					}
				}
			}
			scope:owner = {
				send_interface_message = {
					title = tentacle_corrupt_scheme_invalidated_title
					type = abduct_invalidated_i_imprisoned_message
					desc = tentacle_corrupt_scheme_she_is_slave_message
					left_icon = scope:target
				}
			}
		}
		else_if = {
			limit = {
				#不再受欢迎
				scope:target = { 
					is_tentaclable_female = no
				}
			}
			scope:owner = {
				send_interface_message = {
					title = tentacle_corrupt_scheme_invalidated_title
					type = abduct_invalidated_i_imprisoned_message
					desc = tentacle_corrupt_scheme_she_is_old_message
					left_icon = scope:target
				}
			}
		}
	}
	
	success_desc = "TENTACLE_CORRUPT_SUCCESS_DESC"
	discovery_desc = "TENTACLE_CORRUPT_DISCOVERY_DESC"
}



#奴隶妻子或女儿夺取领主的地位
tentacle_slave_claim_throne = {
	
	skill = intrigue
	desc = "tentacle_slave_claim_throne_desc_general"
	hostile = yes
	
	power_per_skill_point = 2.0
	resistance_per_skill_point = 1.75
	power_per_agent_skill_point = 1
	
	minimum_progress_chance = 60
	maximum_progress_chance = 90
	minimum_success = 5
	maximum_secrecy = 95
	maximum_success = 95
	spymaster_power_per_skill_point = 0
	spymaster_resistance_per_skill_point = 0
	
	allow = {
		is_tentacle_slave = yes
		is_imprisoned = no
		scope:target = { 
			is_landed = yes #有地
			highest_held_title_tier >=tier_county
			OR = {
				is_consort_of = scope:owner
				is_parent_of = scope:owner
			}
		}
	}
	
	valid = {
		is_tentacle_slave = yes
		is_imprisoned = no
		scope:target = { 
			is_ai = yes #暂且给玩家一些保护
			is_landed = yes #有地
			highest_held_title_tier >=tier_county
			OR = {
				is_consort_of = scope:owner
				is_parent_of = scope:owner
			}
		}
	}

	valid_agent = {
		age >= 14
		OR = {
			has_religion = religion:tentacleswarm_religion
			is_tentacle_slave = yes
		}
	}
	
	agent_join_chance = {
		base = 0

		#阴谋基础值
		hostile_murder_agent_base_join_chance_modifier = yes

		#Is Owner sending a gift in the invite interaction?
		modifier = {
			add = 10
			exists = scope:gift
			always = scope:gift
			NOT = {
				OR = {
					scope:target = { is_parent_of = root }
					
				}
			}
			desc = "SCHEME_WITH_GIFT"
		}
		modifier = {
			add = 1000
			root = { is_tentacle_slave = yes }
			desc = "TENTACLE_SLAVE_PATNER"
		}
	}
	
	base_success_chance = {
		base = 0
		
		#阴谋基础值
		hostile_scheme_base_chance_modifier = yes
		
		#首都省份腐化
		modifier = {
			add = scope:target.capital_county.var:tentacleswarm_corruption
			scope:target = {
				exists = capital_county
			}
			#desc = SCHEME_TENTACLE_SLAVE_CLAIM_THRONE_CAPITAL_CORRUPTION
		}		
		#对方执行剿杀
		modifier = {
			add = -50
			scope:target = {
				has_character_modifier = tentacleswarm_anti
			}
			#desc = SCHEME_TENTACLE_SLAVE_CLAIM_THRONE_ANTI
		}
	}
	
	agent_success_chance = {
		base = 0

		#阴谋基础值
		hostile_scheme_agent_success_chance_modifier = yes
	}
	
	agent_leave_threshold = -10
		
	cooldown = { years = 2 }
	is_secret = yes
	base_secrecy = 10

	on_ready = {
		if = {
			limit = {
				scheme_owner = {
					is_tentacle_slave = yes
					is_imprisoned = no
				}
				scope:target = { 
					is_ai = yes #暂且给玩家一些保护
					is_landed = yes #有地
					highest_held_title_tier >=tier_county
					OR = {
						is_consort_of = scope:owner
						is_parent_of = scope:owner
					}
				}
			}
			scheme_target.primary_title = { save_scope_as = target_title }
			scheme_owner = {
				trigger_event = {
						on_action = tentacle_slave_claim_throne_setup
				}
			}
		}
	}

	on_monthly = {
		#hostile_scheme_discovery_chance_effect = yes
		if = {
			limit = {
				NOT = { exists = scope:discovery_event_happening }
			}			
			scheme_owner = {
				trigger_event = {
					on_action = tentacle_slave_claim_throne_ongoing
					days = { 1 30 }
				}
			}
		}
	}

	
	on_invalidated = {
	}
	
	success_desc = "CLAIM_THRONE_SUCCESS_DESC"
	discovery_desc = "CLAIM_THRONE_DISCOVERY_DESC"
}
