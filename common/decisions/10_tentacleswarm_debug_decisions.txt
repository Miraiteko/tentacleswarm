tentacleswarm_restart_decision = {
	major = yes
	picture = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"

	is_shown = {
		debug_only = yes #测试用
	}
	
	is_valid = { 
		is_ai = no
		debug_only = yes
	}	
	effect = {
		trigger_event = { 
			on_action = tentacleswarm_on_game_start
		}
	}
	
	ai_check_interval = 0
	
	ai_potential = {
		always = no
	}
	ai_will_do = {
		base = 0
	}
}
tentacleswarm_test_decision = {
	major = yes
	picture = "gfx/interface/illustrations/decisions/decision_personal_religious.dds" 

	is_shown = {
		debug_only = yes #测试用
	}
	
	is_valid = { 
		is_ai = no
	}	
	effect = {
		save_scope_as = actor
			if = {
				limit = {
					is_ruler = yes
				}
				random_courtier_or_guest = {
					limit = {
						is_tentaclable_female = yes
						is_imprisoned = no
						NOT = { THIS = scope:actor }
						NOT = { is_tentacle_slave_known_by = { CHARACTER = scope:actor } }
						NOT = { has_strong_hook = scope:actor }
						scope:actor = {
							can_start_scheme = {
								type = tentacle_corrupt
								target = PREV
							}
						}
					}
					save_scope_as = recipient
				}
			}
			else_if = {
				limit = {
					exists = liege_or_court_owner
				}
				liege_or_court_owner = {
					random_courtier_or_guest = {
						limit = {
							is_tentaclable_female = yes
							is_imprisoned = no
							NOT = { THIS = scope:actor }
							NOT = { is_tentacle_slave_known_by = { CHARACTER = scope:actor } }
							NOT = { has_strong_hook = scope:actor }
							scope:actor = {
								can_start_scheme = {
									type = tentacle_corrupt
									target = PREV
								}
							}
						}
						save_scope_as = recipient
					}
				}
			}
		#发动腐化计谋
		if = {
			limit = {
				exists = scope:recipient
			}
			start_scheme = {
				type = tentacle_corrupt
				target = scope:recipient
			}
		}
	}

	ai_check_interval = 0
	ai_potential = {
		always = no
	}
	ai_will_do = {
		base = 0
	}
}